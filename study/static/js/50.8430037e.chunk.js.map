{"version":3,"sources":["../node_modules/little-state-machine/dist/little-state-machine.es.js","hooks/useHeaderContext.ts","helper/scrollHelper.ts","utils/wizard.ts","components/Dropdown/style.ts","components/Dropdown/Dropdown.tsx","data/lang.ts","data/country.ts","data/states/Argentina.ts","data/states/Brazil.ts","data/states/Colombia.ts","data/states/Peru.ts","data/states/UnitedStates.ts","containers/Welcome/Step1/Step1.tsx","helper/basePathHelper.ts","assets/images/logo-xoor.svg","components/CreatedBy/style.ts","components/CreatedBy/CreatedBy.tsx"],"names":["getBrowserStoreData","storageType","storeName","sessionStorageData","getItem","JSON","parse","undefined","_a","storeFactory","name","store","set","value","get","getName","isUndefined","val","setUpDevTools","isDevMode","getStore","window","STATE_MACHINE_DEBUG","setItem","STATE_MACHINE_RESET","clear","STATE_MACHINE_GET_STORE","STATE_MACHINE_SAVE_TO","localStorage","stringify","STATE_MACHINE_LOAD","data","StateMachineContext","createContext","updateStore","payload","transformStore","transform","externalStoreName","externalStoreData","currentStoreData","getSyncStoreData","defaultStoreData","options","syncStoreOption","syncStores","Array","isArray","forEach","option","Object","entries","key","values","browserStore","assign","setStore","isClient","sessionStorage","length","toString","removeItem","middleWaresArray","setStorageType","type","createStore","middleWares","methods","process","StateMachineProvider","props","useState","globalState","useMemo","createElement","Provider","actionTemplate","callback","result","shouldReRenderApp","pipeData","reduce","currentValue","currentFunction","useStateMachine","updateStoreFunction","useContext","keys","actions","previous","useCallback","action","p","state","useHeaderContext","React","HeaderContext","title","setTitle","subtitle","setSubtitle","setType","logoSize","setLogoSize","setDoGoBack","doGoBack","scrollToTop","scrollTo","top","behavior","updateAction","storeKey","resetStore","welcome","language","StyledSelect","styled","select","theme","colors","midGray","mineShaft","isMobileFullWidth","breakpoints","tablet","Select","children","languageData","code","label","countryData","telephonePrefix","states","countriesWithStates","filter","c","map","schema","Yup","shape","country","required","region","when","is","includes","then","else","patientId","notRequired","hospitalId","defined","memo","activeStep","setActiveStep","useForm","defaultValues","context","isClinical","currentBasename","resolver","yupResolver","mode","control","formState","handleSubmit","watch","setValue","history","useHistory","isValid","onSubmit","a","otherSteps","nextStepPatient","push","nextStep","useEffect","useTranslation","t","i18n","lang","changeLanguage","countrySelectOptions","consentFormUrl","regionSelectOptions","output","elem","find","s","mt","mb","defaultValue","split","render","onChange","Dropdown","e","currentTarget","id","shouldValidate","onClick","isDisable","CreatedBy","inline","_extends","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","x1","y1","x2","y2","gradientUnits","offset","stopColor","xlinkHref","_ref3","className","d","_ref","svgRef","viewBox","ref","ForwardRef","forwardRef","Container","div","Label","color","Image","LogoXoorSVG","href","rel"],"mappings":"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CA,eACA,YACA,aACA,YACA,SACA,mBACA,aACA,WACA,QACA,QACA,WACA,aACA,eACA,aACA,WACA,QACA,aACA,YACA,OACA,YACA,qBACA,WACA,aACA,YACA,8BACA,YACA,QACA,SACA,kBACA,YACA,YHRA,CACE1H,KAAM,SAAUO,IAAK,SAAUkH,gBAAiB,MAAOC,OAAQ,IAEjE,CACE1H,KAAM,OAAQO,IAAK,OAAQkH,gBAAiB,MAAOC,OI9BpC,CACjB,WACA,SACA,cACA,WACA,WACA,YACA,SACA,QACA,eACA,aACA,MACA,WACA,cACA,aACA,OACA,SACA,gBACA,WACA,QACA,QACA,OACA,aACA,QACA,SACA,YJOA,CACE1H,KAAM,gBAAiBO,IAAK,gBAAiBkH,gBAAiB,MAAOC,OKjCxD,CACf,UACA,SACA,UACA,WACA,aACA,WACA,cACA,WACA,UACA,UACA,SACA,QACA,WACA,UACA,OACA,SACA,WACA,YACA,QACA,WACA,gBACA,WACA,YACA,cACA,WACA,UACA,WACA,SACA,gBACA,aACA,aACA,WACA,iBACA,eACA,OACA,WACA,SACA,eACA,eACA,iBACA,eACA,YACA,QACA,OACA,UACA,WACA,aACA,gBACA,YACA,aLbWC,EAAgCH,EAAYI,QAAO,SAAAC,GAAC,OAAIA,EAAEH,OAAOzE,OAAS,KAAG6E,KAAI,SAAAD,GAAC,OAAIA,EAAEtH,O,kBMA/FwH,EAASC,MAAaC,MAAM,CAChCC,QAASF,MAAaG,WACtB3B,SAAUwB,MAAaG,WACvBC,OAAQJ,MAAaK,KAAK,UAAW,CACnCC,GAAI,SAAC/H,GAAD,OAAiBoH,EAAoBY,SAAShI,IAClDiI,KAAMR,MAAaG,WACnBM,KAAMT,QAERU,UAAWV,MAAaK,KAAK,cAAe,CAC1CC,IAAI,EACJE,KAAMR,MAAaG,WACnBM,KAAMT,MAAaW,gBAErBC,WAAYZ,MAAaK,KAAK,cAAe,CAC3CC,IAAI,EACJE,KAAMR,MAAaG,WACnBM,KAAMT,MAAaW,kBAEpBE,UAsNYxD,cAAMyD,MAlNP,SAAC5D,GAAyB,IAAD,EACDG,IAAMxB,UAAS,G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","file":"static/js/50.8430037e.chunk.js","sourcesContent":["import { createContext, useState, useMemo, createElement, useContext, useCallback } from 'react';\n\nconst STORE_DEFAULT_NAME = '__STATE_MACHINE__';\r\nconst STORE_ACTION_NAME = '__STATE_MACHINE_ACTION_NAME__';\r\nconst STATE_MACHINE_DEBUG_NAME = '___STATE_MACHINE_DEBUG__';\n\nvar getBrowserStoreData = (storageType, storeName) => {\r\n    const sessionStorageData = storageType.getItem(storeName);\r\n    try {\r\n        return sessionStorageData ? JSON.parse(sessionStorageData) : undefined;\r\n    }\r\n    catch (_a) {\r\n        return undefined;\r\n    }\r\n};\n\nfunction storeFactory(storageType, name) {\r\n    const storeName = name || STORE_DEFAULT_NAME;\r\n    let store = getBrowserStoreData(storageType, storeName);\r\n    const getName = () => storeName;\r\n    const set = (value) => {\r\n        store = value;\r\n    };\r\n    const get = () => store;\r\n    return {\r\n        set,\r\n        get,\r\n        getName,\r\n    };\r\n}\n\nvar isUndefined = (val) => val === undefined;\n\nfunction setUpDevTools(isDevMode, storageType, getName, getStore) {\r\n    if (typeof window === 'undefined' || !isDevMode)\r\n        return;\r\n    // @ts-ignore\r\n    window.STATE_MACHINE_DEBUG = (value) => storageType.setItem(STATE_MACHINE_DEBUG_NAME, value);\r\n    // @ts-ignore\r\n    window.STATE_MACHINE_RESET = () => storageType.clear();\r\n    // @ts-ignore\r\n    window.STATE_MACHINE_GET_STORE = () => storageType.getItem(getName());\r\n    // @ts-ignore\r\n    window.STATE_MACHINE_SAVE_TO = name => window.localStorage.setItem(name, JSON.stringify(getStore()));\r\n    // @ts-ignore\r\n    window.STATE_MACHINE_LOAD = ({ storeName, data, }) => storageType.setItem(getName() || STATE_MACHINE_DEBUG_NAME, data || window.localStorage.getItem(storeName) || '');\r\n}\n\nvar StateMachineContext = createContext({\r\n    store: {},\r\n    updateStore: (payload) => payload,\r\n});\n\nvar transformStore = ({ transform, externalStoreName, storageType, store, }) => transform({\r\n    externalStoreData: getBrowserStoreData(storageType, externalStoreName),\r\n    currentStoreData: store,\r\n});\n\nfunction getSyncStoreData(defaultStoreData, options, storageType) {\r\n    let store = defaultStoreData;\r\n    const syncStoreOption = options.syncStores;\r\n    if (!syncStoreOption)\r\n        return store;\r\n    try {\r\n        if (Array.isArray(syncStoreOption)) {\r\n            syncStoreOption.forEach(option => {\r\n                store = transformStore({\r\n                    transform: option.transform,\r\n                    externalStoreName: option.externalStoreName,\r\n                    storageType,\r\n                    store,\r\n                });\r\n            });\r\n        }\r\n        else if (syncStoreOption.externalStoreName &&\r\n            typeof syncStoreOption.transform === 'function' &&\r\n            typeof syncStoreOption.externalStoreName === 'string') {\r\n            return transformStore({\r\n                transform: syncStoreOption.transform,\r\n                externalStoreName: syncStoreOption.externalStoreName,\r\n                storageType,\r\n                store,\r\n            });\r\n        }\r\n        else {\r\n            Object.entries(syncStoreOption).forEach(([key, values]) => {\r\n                const browserStore = getBrowserStoreData(storageType, key);\r\n                values.forEach((value) => {\r\n                    store = Object.assign(Object.assign({}, store), {\r\n                        [value]: Object.assign(Object.assign({}, store[value]), browserStore[value]),\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    }\r\n    catch (_a) {\r\n        return store;\r\n    }\r\n    return store;\r\n}\n\nconst isClient = typeof window !== 'undefined';\r\nconst isDevMode = process.env.NODE_ENV !== 'production';\r\nlet storageType = isClient\r\n    ? window.sessionStorage\r\n    : {\r\n        getItem: payload => payload,\r\n        setItem: (payload) => payload,\r\n        clear: () => { },\r\n        length: 0,\r\n        key: (payload) => payload.toString(),\r\n        removeItem: () => { },\r\n    };\r\nlet getStore;\r\nlet setStore;\r\nlet getName;\r\nlet middleWaresArray = [];\r\nconst middleWare = (data = '') => {\r\n    if (data && isClient) {\r\n        // @ts-ignore\r\n        window[STORE_ACTION_NAME] = data;\r\n    }\r\n    return data;\r\n};\r\nfunction setStorageType(type) {\r\n    storageType = type;\r\n}\r\nfunction createStore(defaultStoreData, options = {\r\n    name: STORE_DEFAULT_NAME,\r\n    middleWares: [],\r\n    syncStores: undefined,\r\n}) {\r\n    const storeName = options ? options.name : STORE_DEFAULT_NAME;\r\n    const methods = storeFactory(storageType, storeName);\r\n    if (isDevMode && isClient) {\r\n        // @ts-ignore\r\n        window['STATE_MACHINE_NAME'] = storeName;\r\n    }\r\n    getName = methods.getName;\r\n    getStore = methods.get;\r\n    setStore = methods.set;\r\n    middleWaresArray = options.middleWares;\r\n    setUpDevTools(isDevMode, storageType, getName, getStore);\r\n    setStore(getSyncStoreData(getStore() || defaultStoreData, options, storageType));\r\n}\r\nfunction StateMachineProvider(props) {\r\n    const [globalState, updateStore] = useState(getStore());\r\n    const value = useMemo(() => ({\r\n        store: globalState,\r\n        updateStore,\r\n    }), [globalState]);\r\n    // @ts-ignore\r\n    return createElement(StateMachineContext.Provider, Object.assign({ value: value }, props));\r\n}\r\nconst actionTemplate = ({ options, callback, updateStore, }) => (payload) => {\r\n    let result;\r\n    const debugName = callback ? callback.name : '';\r\n    if (isDevMode) {\r\n        middleWare(debugName);\r\n    }\r\n    if (callback) {\r\n        result = callback(getStore(), payload);\r\n    }\r\n    setStore(isUndefined(result) ? getStore() : result);\r\n    storageType.setItem(getName(), JSON.stringify(getStore()));\r\n    if (isUndefined(options) ||\r\n        (options && options.shouldReRenderApp !== false)) {\r\n        let pipeData = getStore();\r\n        if (Array.isArray(middleWaresArray) && middleWaresArray.length) {\r\n            pipeData = middleWaresArray.reduce((currentValue, currentFunction) => currentFunction(currentValue) || currentValue, pipeData);\r\n        }\r\n        updateStore(pipeData);\r\n    }\r\n};\r\nfunction useStateMachine(updateStoreFunction, options) {\r\n    const { store: globalState, updateStore } = useContext(StateMachineContext);\r\n    if (updateStoreFunction && Object.keys(updateStoreFunction).length) {\r\n        return {\r\n            actions: Object.entries(updateStoreFunction).reduce((previous, [key, callback]) => (Object.assign(Object.assign({}, previous), { [key]: useCallback(actionTemplate({\r\n                    options,\r\n                    callback,\r\n                    updateStore,\r\n                }), []) })), {}),\r\n            action: p => p,\r\n            state: globalState,\r\n        };\r\n    }\r\n    return {\r\n        actions: {},\r\n        action: useCallback(updateStoreFunction\r\n            ? actionTemplate({\r\n                options,\r\n                callback: updateStoreFunction,\r\n                updateStore,\r\n            })\r\n            : () => { }, []),\r\n        state: globalState,\r\n    };\r\n}\n\nexport { StateMachineContext, StateMachineProvider, createStore, setStorageType, useStateMachine };\n","import React from 'react';\nimport { HeaderContext } from 'components/Header';\n\nconst useHeaderContext = () => {\n  const {\n    title, setTitle, subtitle, setSubtitle, type, setType, logoSize, setLogoSize, setDoGoBack, doGoBack,\n  } = React.useContext(HeaderContext);\n\n  return {\n    title,\n    setTitle,\n    subtitle,\n    setSubtitle,\n    type,\n    setType,\n    logoSize,\n    setLogoSize,\n    doGoBack,\n    setDoGoBack,\n  };\n};\n\nexport default useHeaderContext;\n","export const scrollToTop = function scrollToTop() {\n  window.scrollTo({ top: 0, behavior: 'smooth' });\n};\n\nexport const scrollToBottom = function scrollToBottom() {\n  window.scrollTo({ top: document.body.scrollHeight, behavior: 'smooth' });\n};\n","// TODO: Improve types\nexport function updateAction(storeKey: string): any {\n  return (state: any, payload: any) => ({\n    ...state,\n    [storeKey]: {\n      ...state[storeKey],\n      ...payload,\n    },\n  });\n}\n\nexport function resetStore(): any {\n  return (state: any) => ({ welcome: { language: state.welcome.language } });\n}\n","import styled from 'styled-components';\n\ninterface StyledSelectProps {\n  isMobileFullWidth?: boolean;\n}\n\nexport const StyledSelect = styled.select<StyledSelectProps>`\n  appearance: none;\n  background-image: url(\"data:image/svg+xml,%3Csvg width='12' height='6' viewBox='0 0 12 6' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0.538574 0.838867L6.1155 5.83887L11.6924 0.838867H0.538574Z' fill='%2321242C'/%3E%3C/svg%3E\");\n  background-color: ${props => props.theme.colors.midGray};\n  background-position: 95% 50%;\n  background-repeat: no-repeat;\n  border: 0;\n  border-radius: 15px;\n  color: ${props => props.theme.colors.mineShaft};\n  font-family: 'Source Sans Pro';\n  margin: auto;\n  padding: 12px 15px;\n  font-size: 14px;\n  \n  height: 48px;\n  max-width: ${({ isMobileFullWidth }) => (isMobileFullWidth ? 'none' : '320px')};\n  width: 100%;\n\n\n  @media screen and (${props => props.theme.breakpoints.tablet}){\n    max-width: 348px;\n    }\n`;\n","/* eslint-disable react/require-default-props */\nimport React, { FunctionComponent, HTMLAttributes } from 'react';\nimport { StyledSelect } from './style';\n\ninterface DropdownProps extends HTMLAttributes<HTMLSelectElement>{\n  children: React.ReactNode;\n  isMobileFullWidth?: boolean;\n  value: string;\n}\n\nconst Select:FunctionComponent<DropdownProps> = (props:DropdownProps) => {\n  const { children, value, isMobileFullWidth } = props;\n  return <StyledSelect {...props} value={value} isMobileFullWidth={isMobileFullWidth}>{children}</StyledSelect>;\n};\n\nexport default Select;\n","export const languageData = [\n  { code: 'en', label: 'English' },\n  { code: 'es', label: 'Español' },\n  { code: 'pt', label: 'Português' },\n];\n","import ArgentinaStates from './states/Argentina';\nimport BrazilStates from './states/Brazil';\nimport ColombiaStates from './states/Colombia';\nimport PeruStates from './states/Peru';\nimport UsStates from './states/UnitedStates';\n\nexport interface CountryDataProps {\n  name: string;\n  val: string;\n  telephonePrefix: string;\n  states: string[],\n}\n\nexport const countryData: CountryDataProps[] = [\n  {\n    name: 'Argentina', val: 'Argentina', telephonePrefix: '+54', states: ArgentinaStates,\n  },\n  {\n    name: 'Bolivia', val: 'Bolivia', telephonePrefix: '+591', states: [],\n  },\n  {\n    name: 'Brazil', val: 'Brazil', telephonePrefix: '+55', states: BrazilStates,\n  },\n  {\n    name: 'Colombia', val: 'Colombia', telephonePrefix: '+57', states: ColombiaStates,\n  },\n  {\n    name: 'Mexico', val: 'Mexico', telephonePrefix: '+52', states: [],\n  },\n  {\n    name: 'Peru', val: 'Peru', telephonePrefix: '+51', states: PeruStates,\n  },\n  {\n    name: 'United States', val: 'United States', telephonePrefix: '+51', states: UsStates,\n  },\n];\n\nexport const countriesWithStates: string[] = countryData.filter(c => c.states.length > 0).map(c => c.val);\n","const argentinaStates = [\n  'Ciudad Autónoma de Buenos Aires',\n  'Buenos Aires',\n  'Catamarca',\n  'Chaco',\n  'Chubut',\n  'Córdoba',\n  'Corrientes',\n  'Entre Ríos',\n  'Formosa',\n  'Jujuy',\n  'La Pampa',\n  'La Rioja',\n  'Mendoza',\n  'Misiones',\n  'Neuquén',\n  'Río Negro',\n  'Salta',\n  'San Juan',\n  'San Luis',\n  'Santa Cruz',\n  'Santa Fe',\n  'Santiago del Estero',\n  'Tierra del Fuego',\n  'Tucumán',\n];\n\nexport default argentinaStates;\n","const brazilStates = [\n  'Acre',\n  'Alagoas',\n  'Amapá',\n  'Amazonas',\n  'Bahia',\n  'Ceará',\n  'Distrito Federal',\n  'Espírito Santo',\n  'Goiás',\n  'Maranhão',\n  'Mato Grosso',\n  'Mato Grosso do Sul',\n  'Minas Gerais',\n  'Pará',\n  'Paraíba',\n  'Paraná',\n  'Pernambuco',\n  'Piauí',\n  'Rio de Janeiro',\n  'Rio Grande do Norte',\n  'Rio Grande do Sul',\n  'Rondônia',\n  'Roraima',\n  'Santa Catarina',\n  'São Paulo',\n  'Sergipe',\n  'Tocantins',\n];\n\nexport default brazilStates;\n","const colombiaStates = [\n  'Amazonas',\n  'Antioquia',\n  'Arauca',\n  'Atlántico',\n  'Bogotá',\n  'Bolívar',\n  'Boyacá',\n  'Caldas',\n  'Capital District',\n  'Caquetá',\n  'Casanare',\n  'Cauca',\n  'Cesar',\n  'Chocó',\n  'Córdoba',\n  'Cundinamarca',\n  'Guainía',\n  'Guaviare',\n  'Huila',\n  'La Guajira',\n  'Magdalena',\n  'Meta',\n  'Nariño',\n  'Norte de Santander',\n  'Putumayo',\n  'Quindío',\n  'Risaralda',\n  'San Andrés y Providencia',\n  'Santander',\n  'Sucre',\n  'Tolima',\n  'Valle del Cauca',\n  'Vaupés',\n  'Vichada',\n];\n\nexport default colombiaStates;\n","const peruStates = [\n  'Amazonas',\n  'Ancash',\n  'Apurímac',\n  'Arequipa',\n  'Ayacucho',\n  'Cajamarca',\n  'Callao',\n  'Cuzco',\n  'Huancavelica',\n  'Huánuco',\n  'Ica',\n  'Junín',\n  'La Libertad',\n  'Lambayeque',\n  'Lima',\n  'Loreto',\n  'Madre de Dios',\n  'Moquegua',\n  'Pasco',\n  'Piura',\n  'Puno',\n  'San Martin',\n  'Tacna',\n  'Tumbes',\n  'Ucayali',\n];\n\nexport default peruStates;\n","const usStates = [\n  'Alabama',\n  'Alaska',\n  'Arizona',\n  'Arkansas',\n  'California',\n  'Colorado',\n  'Connecticut',\n  'Delaware',\n  'Florida',\n  'Georgia',\n  'Hawaii',\n  'Idaho',\n  'Illinois',\n  'Indiana',\n  'Iowa',\n  'Kansas',\n  'Kentucky',\n  'Louisiana',\n  'Maine',\n  'Maryland',\n  'Massachusetts',\n  'Michigan',\n  'Minnesota',\n  'Mississippi',\n  'Missouri',\n  'Montana',\n  'Nebraska',\n  'Nevada',\n  'New Hampshire',\n  'New Jersey',\n  'New Mexico',\n  'New York',\n  'North Carolina',\n  'North Dakota',\n  'Ohio',\n  'Oklahoma',\n  'Oregon',\n  'Pennsylvania',\n  'Rhode Island',\n  'South Carolina',\n  'South Dakota',\n  'Tennessee',\n  'Texas',\n  'Utah',\n  'Vermont',\n  'Virginia',\n  'Washington',\n  'West Virginia',\n  'Wisconsin',\n  'Wyoming',\n];\n\nexport default usStates;\n","import React, { useEffect, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\n// Form\nimport { useForm, Controller } from 'react-hook-form';\nimport { useStateMachine } from 'little-state-machine';\nimport { yupResolver } from '@hookform/resolvers';\nimport * as Yup from 'yup';\n\n// Components\nimport Dropdown from 'components/Dropdown';\nimport CreatedBy from 'components/CreatedBy';\n\n// Update Action\nimport { updateAction } from 'utils/wizard';\n\n// Header Control\nimport useHeaderContext from 'hooks/useHeaderContext';\n\n// Data\nimport { languageData } from 'data/lang';\nimport { countryData, countriesWithStates } from 'data/country';\n\n// Utils\nimport { scrollToTop } from 'helper/scrollHelper';\n\n// Helper\nimport { isClinic } from 'helper/basePathHelper';\n\n// Styles\nimport {\n  WelcomeContent, WelcomeStyledForm, LogoSubtitle,\n  RegionContainer, WelcomeInput, ContainerNextButton, NextButton, ArrowRightSVG,\n  BoldBlackText, CustomPurpleText, SupportedBy, NuevaLogo,\n} from '../style';\n\nconst schema = Yup.object().shape({\n  country: Yup.string().required(),\n  language: Yup.string().required(),\n  region: Yup.string().when('country', {\n    is: (val: string) => countriesWithStates.includes(val),\n    then: Yup.string().required(),\n    else: Yup.string(),\n  }),\n  patientId: Yup.string().when('$isClinical', {\n    is: true,\n    then: Yup.string().required(),\n    else: Yup.string().notRequired(),\n  }),\n  hospitalId: Yup.string().when('$isClinical', {\n    is: true,\n    then: Yup.string().required(),\n    else: Yup.string().notRequired(),\n  }),\n}).defined();\n\ntype Step1Type = Yup.InferType<typeof schema>;\n\nconst Step1 = (p: Wizard.StepProps) => {\n  const [activeStep, setActiveStep] = React.useState(true);\n  const {\n    setType, setDoGoBack, setLogoSize,\n  } = useHeaderContext();\n\n  const { state, action } = useStateMachine(updateAction(p.storeKey));\n\n  const store = state?.[p.storeKey];\n  const {\n    control,\n    formState,\n    handleSubmit,\n    watch,\n    setValue,\n  } = useForm({\n    defaultValues: store,\n    context: {\n      isClinical: isClinic,\n    },\n    resolver: yupResolver(schema),\n    mode: 'onChange',\n  });\n\n  const history = useHistory();\n  const { isValid } = formState;\n\n  const onSubmit = async (values: Step1Type) => {\n    if (values) {\n      action(values);\n      if (values.patientId && p.otherSteps?.nextStepPatient) {\n        setActiveStep(false);\n        history.push(p.otherSteps.nextStepPatient);\n      } else if (p.nextStep) {\n        setActiveStep(false);\n        history.push(p.nextStep);\n      }\n    }\n  };\n\n  const resetRegion = () => {\n    setValue('region', '', {\n      shouldValidate: true,\n    });\n  };\n\n  useEffect(() => {\n    scrollToTop();\n    // Hide back arrow in header if neccesary\n    setDoGoBack(null);\n    setType('tertiary');\n    setLogoSize('big');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const { t, i18n } = useTranslation();\n\n  const lang = watch('language');\n  const country = watch('country');\n\n  useEffect(() => {\n    i18n.changeLanguage(lang);\n  }, [i18n, lang]);\n\n  const countrySelectOptions = useMemo(() => [{ name: t('main:selectCountry'), consentFormUrl: '', val: '' },\n    ...countryData], [t]);\n\n  const regionSelectOptions = useMemo(() => {\n    const output = [\n      { name: t('main:selectRegion'), val: '' },\n    ];\n    if (country) {\n      const elem = countryData.find(a => a.val === country);\n      if (elem) {\n        elem.states.forEach(s => {\n          output.push({ name: s, val: s });\n        });\n      }\n    }\n    return output;\n  }, [t, country]);\n\n  return (\n    <>\n      <WelcomeStyledForm>\n        <LogoSubtitle>\n          {t('main:logoIntro', 'An Independent Nonprofit Research Organization')}\n        </LogoSubtitle>\n        <WelcomeContent mt={4}>\n          <CustomPurpleText mb={8}>\n            {t('main:paragraph2', 'Covid-19 Cough Data Collection Study')}\n          </CustomPurpleText>\n          <SupportedBy>\n            {t('main:supportedBy', 'Supported by')}\n            <NuevaLogo />\n          </SupportedBy>\n          <BoldBlackText>\n            {t('main:selectYourLanguage', 'Language')}\n          </BoldBlackText>\n\n          {/* Language */}\n          <Controller\n            control={control}\n            name=\"language\"\n            defaultValue={i18n.language.split('-')[0] || languageData[0].code}\n            render={({ onChange, value }) => (\n              <Dropdown\n                onChange={e => onChange(e.currentTarget.value)}\n                value={value}\n              >\n                {\n                  languageData.map(({ code, label }) => (\n                    <option\n                      key={code}\n                      id={code}\n                      value={code}\n                    >\n                      {label}\n                    </option>\n                  ))\n                }\n              </Dropdown>\n            )}\n          />\n\n          <BoldBlackText>\n            {t('main:selectLocation', 'Location')}\n          </BoldBlackText>\n\n          <Controller\n            control={control}\n            name=\"country\"\n            defaultValue={countrySelectOptions[0].val}\n            render={({ onChange, value }) => (\n              <Dropdown onChange={e => { onChange(e.currentTarget.value); resetRegion(); }} value={value}>\n                {countrySelectOptions.map(({ name, val }) => <option key={name} id={name} value={val}>{name}</option>)}\n              </Dropdown>\n            )}\n          />\n\n          <Controller\n            control={control}\n            name=\"region\"\n            defaultValue={regionSelectOptions[0].val}\n            render={({ onChange, value }) => (regionSelectOptions.length > 1 ? (\n              <RegionContainer>\n                <Dropdown onChange={e => onChange(e.currentTarget.value)} value={value}>\n                  {regionSelectOptions.map(({ name, val }) => <option key={name} id={name} value={val}>{name}</option>)}\n                </Dropdown>\n              </RegionContainer>\n            ) : <></>)}\n          />\n          {isClinic && (\n            <>\n              <BoldBlackText>\n                {t('main:patientId', 'Enter patient ID:')}\n              </BoldBlackText>\n              <Controller\n                control={control}\n                name=\"patientId\"\n                defaultValue=\"\"\n                render={({ onChange, value, name }) => (\n                  <WelcomeInput\n                    name={name}\n                    value={value}\n                    onChange={onChange}\n                    type=\"text\"\n                    autoComplete=\"Off\"\n                  />\n                )}\n              />\n              <BoldBlackText>\n                {t('main:hospitalId', 'Enter hospital ID:')}\n              </BoldBlackText>\n              <Controller\n                control={control}\n                name=\"hospitalId\"\n                defaultValue=\"\"\n                render={({ onChange, value, name }) => (\n                  <WelcomeInput\n                    name={name}\n                    value={value}\n                    onChange={onChange}\n                    type=\"text\"\n                    autoComplete=\"Off\"\n                  />\n                )}\n              />\n            </>\n          )}\n          {\n            activeStep && (\n              <>\n                <ContainerNextButton>\n                  <NextButton\n                    onClick={handleSubmit(onSubmit)}\n                    isDisable={!isValid}\n                  >\n                    <ArrowRightSVG />\n                  </NextButton>\n                </ContainerNextButton>\n                <CreatedBy inline />\n              </>\n            )\n          }\n        </WelcomeContent>\n      </WelcomeStyledForm>\n    </>\n  );\n};\n\nexport default React.memo(Step1);\n","const currentBasename = process.env.REACT_APP_BASENAME || '/study';\nexport const isClinic = currentBasename === '/clinic';\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1{fill:url(#linear-gradient);}.cls-2{fill:url(#linear-gradient-2);}\"), /*#__PURE__*/React.createElement(\"linearGradient\", {\n  id: \"linear-gradient\",\n  x1: -3.15,\n  y1: 189.74,\n  x2: 687.53,\n  y2: 189.74,\n  gradientUnits: \"userSpaceOnUse\"\n}, /*#__PURE__*/React.createElement(\"stop\", {\n  offset: 0,\n  stopColor: \"#00a6e1\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  offset: 1,\n  stopColor: \"#4fc1bc\"\n})), /*#__PURE__*/React.createElement(\"linearGradient\", {\n  id: \"linear-gradient-2\",\n  x1: -3.15,\n  y1: 63.25,\n  x2: 687.53,\n  y2: 63.25,\n  xlinkHref: \"#linear-gradient\"\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M236.59,220.19a93.8,93.8,0,0,1-93.69-93.69,125.71,125.71,0,0,1-16.4,62.23,126.44,126.44,0,0,0,220.19,0,125.71,125.71,0,0,1-16.4-62.23A93.8,93.8,0,0,1,236.59,220.19Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-2\",\n  d: \"M456.78,32.8a93.8,93.8,0,0,1,93.69,93.69,125.72,125.72,0,0,1,16.4-62.23,126.44,126.44,0,0,0-220.19,0,125.71,125.71,0,0,1,16.4,62.23A93.8,93.8,0,0,1,456.78,32.8Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-2\",\n  d: \"M16.4,0a16.4,16.4,0,0,0,0,32.8,93.8,93.8,0,0,1,93.69,93.69,125.72,125.72,0,0,1,16.4-62.23A126.58,126.58,0,0,0,16.4,0Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-2\",\n  d: \"M677,0A126.58,126.58,0,0,0,566.87,64.26a125.71,125.71,0,0,1,16.4,62.23A93.8,93.8,0,0,1,677,32.8,16.4,16.4,0,0,0,677,0Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M16.4,220.19a16.4,16.4,0,1,0,0,32.8,126.58,126.58,0,0,0,110.09-64.26,125.72,125.72,0,0,1-16.4-62.23A93.8,93.8,0,0,1,16.4,220.19Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M566.87,142.89a16.4,16.4,0,0,1-16.4-16.4,93.69,93.69,0,0,1-187.39,0,125.71,125.71,0,0,1-16.4,62.23,126.47,126.47,0,0,0,236.59-62.23A16.4,16.4,0,0,1,566.87,142.89Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  className: \"cls-2\",\n  d: \"M236.59,32.8a93.8,93.8,0,0,1,93.69,93.69,125.71,125.71,0,0,1,16.4-62.23,126.44,126.44,0,0,0-220.19,0,125.71,125.71,0,0,1,16.4,62.23A93.8,93.8,0,0,1,236.59,32.8Z\"\n}));\n\nvar SvgLogoXoor = function SvgLogoXoor(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 693.36 252.99\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLogoXoor, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo-xoor.dd0a3602.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nimport { ReactComponent as LogoXoorSVG } from 'assets/images/logo-xoor.svg';\n\nexport const Container = styled.div<{ inline: boolean; mt?: string; }>`\n  display: flex;\n  justify-content: ${({ inline }) => (inline ? 'center' : 'flex-end')};\n  align-items: ${({ inline }) => (inline ? 'flex-end' : 'center')};\n  flex-direction: ${({ inline }) => (inline ? 'row' : 'column')};\n  margin-top: ${({ mt }) => mt || '22px'};\n  > * {\n    margin: ${({ inline }) => (inline ? '0px 5px' : '5px 0px')};\n  }\n`;\n\nexport const Label = styled.div<{ color?: string; }>`\n  font-family: \"Open Sans\";\n  font-size: 0.875rem;\n  font-weight: 700;\n  color: ${({ color }) => color || '#393939'};\n`;\n\nexport const Image = styled(LogoXoorSVG)`\n  width: 60px;\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\n// Style\nimport { Container, Label, Image } from './style';\n\ninterface CreatedByProps {\n  inline?: boolean;\n  mt?: string;\n  color?: string;\n}\n\nconst CreatedBy = ({ inline = false, mt, color }: CreatedByProps) => {\n  const { t } = useTranslation();\n  return (\n    <Container inline={inline} mt={mt}>\n      <Label color={color}>{t('main:createdBy', 'Created By')}</Label>\n      <a href=\"https://xoor.io\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <Image />\n      </a>\n    </Container>\n  );\n};\n\nexport default CreatedBy;\n"],"sourceRoot":""}