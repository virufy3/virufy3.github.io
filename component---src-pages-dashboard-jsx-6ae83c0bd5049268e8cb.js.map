{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./src/script/maps/countriies.js","webpack:///./src/services/CoughService.js","webpack:///./src/pages/MapAmerica.jsx","webpack:///./src/pages/dashboard.jsx"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","countryCode","url","getData","fetch","response","ok","json","Error","message","name","props","dataToCountries","data","feed","entry","reduce","acc","item","i","gs$cell","numericValue","$t","parseInt","map","toLowerCase","state","options","title","text","chart","spacingTop","marginTop","height","responsives","rules","condition","minHeight","chartOptions","legend","align","verticalAlign","layout","plotOptions","states","hover","color","enabled","colorAxis","min","minColor","maxColor","tooltip","formatter","intl","formatMessage","id","point","credits","exporting","subtitle","floating","y","style","fontSize","series","mapData","americalMap","dataLabels","format","mapNavigation","buttonOptions","countries","HighMaps","findDOMNode","setTimeout","bind","componentDidMount","componentWillUnmount","destroy","render","Component","Dashboard","useIntl","className","dangerouslySetInnerHTML","__html","target","href","width","scrolling","src","allowfullscreen"],"mappings":"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","file":"component---src-pages-dashboard-jsx-6ae83c0bd5049268e8cb.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export const countryCode = {\n  [\"Afghanistan\"]: \"AF\",\n  [\"Ã…land Islands\"]: \"AX\",\n  [\"Albania\"]: \"AL\",\n  [\"Algeria\"]: \"DZ\",\n  [\"American Samoa\"]: \"AS\",\n  [\"AndorrA\"]: \"AD\",\n  [\"Angola\"]: \"AO\",\n  [\"Anguilla\"]: \"AI\",\n  [\"Antarctica\"]: \"AQ\",\n  [\"Antigua and Barbuda\"]: \"AG\",\n  [\"Argentina\"]: \"AR\",\n  [\"Armenia\"]: \"AM\",\n  [\"Aruba\"]: \"AW\",\n  [\"Australia\"]: \"AU\",\n  [\"Austria\"]: \"AT\",\n  [\"Azerbaijan\"]: \"AZ\",\n  [\"Bahamas\"]: \"BS\",\n  [\"Bahrain\"]: \"BH\",\n  [\"Bangladesh\"]: \"BD\",\n  [\"Barbados\"]: \"BB\",\n  [\"Belarus\"]: \"BY\",\n  [\"Belgium\"]: \"BE\",\n  [\"Belize\"]: \"BZ\",\n  [\"Benin\"]: \"BJ\",\n  [\"Bermuda\"]: \"BM\",\n  [\"Bhutan\"]: \"BT\",\n  [\"Bolivia\"]: \"BO\",\n  [\"Bosnia and Herzegovina\"]: \"BA\",\n  [\"Botswana\"]: \"BW\",\n  [\"Bouvet Island\"]: \"BV\",\n  [\"Brazil\"]: \"BR\",\n  [\"British Indian Ocean Territory\"]: \"IO\",\n  [\"Brunei Darussalam\"]: \"BN\",\n  [\"Bulgaria\"]: \"BG\",\n  [\"Burkina Faso\"]: \"BF\",\n  [\"Burundi\"]: \"BI\",\n  [\"Cambodia\"]: \"KH\",\n  [\"Cameroon\"]: \"CM\",\n  [\"Canada\"]: \"CA\",\n  [\"Cape Verde\"]: \"CV\",\n  [\"Cayman Islands\"]: \"KY\",\n  [\"Central African Republic\"]: \"CF\",\n  [\"Chad\"]: \"TD\",\n  [\"Chile\"]: \"CL\",\n  [\"China\"]: \"CN\",\n  [\"Christmas Island\"]: \"CX\",\n  [\"Cocos (Keeling) Islands\"]: \"CC\",\n  [\"Colombia\"]: \"CO\",\n  [\"Comoros\"]: \"KM\",\n  [\"Congo\"]: \"CG\",\n  [\"Congo, The Democratic Republic of the\"]: \"CD\",\n  [\"Cook Islands\"]: \"CK\",\n  [\"Costa Rica\"]: \"CR\",\n  [\"Cote D'Ivoire\"]: \"CI\",\n  [\"Croatia\"]: \"HR\",\n  [\"Cuba\"]: \"CU\",\n  [\"Cyprus\"]: \"CY\",\n  [\"Czech Republic\"]: \"CZ\",\n  [\"Denmark\"]: \"DK\",\n  [\"Djibouti\"]: \"DJ\",\n  [\"Dominica\"]: \"DM\",\n  [\"Dominican Republic\"]: \"DO\",\n  [\"Ecuador\"]: \"EC\",\n  [\"Egypt\"]: \"EG\",\n  [\"El Salvador\"]: \"SV\",\n  [\"Equatorial Guinea\"]: \"GQ\",\n  [\"Eritrea\"]: \"ER\",\n  [\"Estonia\"]: \"EE\",\n  [\"Ethiopia\"]: \"ET\",\n  [\"Falkland Islands (Malvinas)\"]: \"FK\",\n  [\"Faroe Islands\"]: \"FO\",\n  [\"Fiji\"]: \"FJ\",\n  [\"Finland\"]: \"FI\",\n  [\"France\"]: \"FR\",\n  [\"French Guiana\"]: \"GF\",\n  [\"French Polynesia\"]: \"PF\",\n  [\"French Southern Territories\"]: \"TF\",\n  [\"Gabon\"]: \"GA\",\n  [\"Gambia\"]: \"GM\",\n  [\"Georgia\"]: \"GE\",\n  [\"Germany\"]: \"DE\",\n  [\"Ghana\"]: \"GH\",\n  [\"Gibraltar\"]: \"GI\",\n  [\"Greece\"]: \"GR\",\n  [\"Greenland\"]: \"GL\",\n  [\"Grenada\"]: \"GD\",\n  [\"Guadeloupe\"]: \"GP\",\n  [\"Guam\"]: \"GU\",\n  [\"Guatemala\"]: \"GT\",\n  [\"Guernsey\"]: \"GG\",\n  [\"Guinea\"]: \"GN\",\n  [\"Guinea-Bissau\"]: \"GW\",\n  [\"Guyana\"]: \"GY\",\n  [\"Haiti\"]: \"HT\",\n  [\"Heard Island and Mcdonald Islands\"]: \"HM\",\n  [\"Holy See (Vatican City State)\"]: \"VA\",\n  [\"Honduras\"]: \"HN\",\n  [\"Hong Kong\"]: \"HK\",\n  [\"Hungary\"]: \"HU\",\n  [\"Iceland\"]: \"IS\",\n  [\"India\"]: \"IN\",\n  [\"Indonesia\"]: \"ID\",\n  [\"Iran, Islamic Republic Of\"]: \"IR\",\n  [\"Iraq\"]: \"IQ\",\n  [\"Ireland\"]: \"IE\",\n  [\"Isle of Man\"]: \"IM\",\n  [\"Israel\"]: \"IL\",\n  [\"Italy\"]: \"IT\",\n  [\"Jamaica\"]: \"JM\",\n  [\"Japan\"]: \"JP\",\n  [\"Jersey\"]: \"JE\",\n  [\"Jordan\"]: \"JO\",\n  [\"Kazakhstan\"]: \"KZ\",\n  [\"Kenya\"]: \"KE\",\n  [\"Kiribati\"]: \"KI\",\n  [\"Korea, Democratic People'S Republic of\"]: \"KP\",\n  [\"Korea, Republic of\"]: \"KR\",\n  [\"Kuwait\"]: \"KW\",\n  [\"Kyrgyzstan\"]: \"KG\",\n  [\"Lao People'S Democratic Republic\"]: \"LA\",\n  [\"Latvia\"]: \"LV\",\n  [\"Lebanon\"]: \"LB\",\n  [\"Lesotho\"]: \"LS\",\n  [\"Liberia\"]: \"LR\",\n  [\"Libyan Arab Jamahiriya\"]: \"LY\",\n  [\"Liechtenstein\"]: \"LI\",\n  [\"Lithuania\"]: \"LT\",\n  [\"Luxembourg\"]: \"LU\",\n  [\"Macao\"]: \"MO\",\n  [\"Macedonia, The Former Yugoslav Republic of\"]: \"MK\",\n  [\"Madagascar\"]: \"MG\",\n  [\"Malawi\"]: \"MW\",\n  [\"Malaysia\"]: \"MY\",\n  [\"Maldives\"]: \"MV\",\n  [\"Mali\"]: \"ML\",\n  [\"Malta\"]: \"MT\",\n  [\"Marshall Islands\"]: \"MH\",\n  [\"Martinique\"]: \"MQ\",\n  [\"Mauritania\"]: \"MR\",\n  [\"Mauritius\"]: \"MU\",\n  [\"Mayotte\"]: \"YT\",\n  [\"Mexico\"]: \"MX\",\n  [\"Micronesia, Federated States of\"]: \"FM\",\n  [\"Moldova, Republic of\"]: \"MD\",\n  [\"Monaco\"]: \"MC\",\n  [\"Mongolia\"]: \"MN\",\n  [\"Montserrat\"]: \"MS\",\n  [\"Morocco\"]: \"MA\",\n  [\"Mozambique\"]: \"MZ\",\n  [\"Myanmar\"]: \"MM\",\n  [\"Namibia\"]: \"NA\",\n  [\"Nauru\"]: \"NR\",\n  [\"Nepal\"]: \"NP\",\n  [\"Netherlands\"]: \"NL\",\n  [\"Netherlands Antilles\"]: \"AN\",\n  [\"New Caledonia\"]: \"NC\",\n  [\"New Zealand\"]: \"NZ\",\n  [\"Nicaragua\"]: \"NI\",\n  [\"Niger\"]: \"NE\",\n  [\"Nigeria\"]: \"NG\",\n  [\"Niue\"]: \"NU\",\n  [\"Norfolk Island\"]: \"NF\",\n  [\"Northern Mariana Islands\"]: \"MP\",\n  [\"Norway\"]: \"NO\",\n  [\"Oman\"]: \"OM\",\n  [\"Pakistan\"]: \"PK\",\n  [\"Palau\"]: \"PW\",\n  [\"Palestinian Territory, Occupied\"]: \"PS\",\n  [\"Panama\"]: \"PA\",\n  [\"Papua New Guinea\"]: \"PG\",\n  [\"Paraguay\"]: \"PY\",\n  [\"Peru\"]: \"PE\",\n  [\"Philippines\"]: \"PH\",\n  [\"Pitcairn\"]: \"PN\",\n  [\"Poland\"]: \"PL\",\n  [\"Portugal\"]: \"PT\",\n  [\"Puerto Rico\"]: \"PR\",\n  [\"Qatar\"]: \"QA\",\n  [\"Reunion\"]: \"RE\",\n  [\"Romania\"]: \"RO\",\n  [\"Russian Federation\"]: \"RU\",\n  [\"RWANDA\"]: \"RW\",\n  [\"Saint Helena\"]: \"SH\",\n  [\"Saint Kitts and Nevis\"]: \"KN\",\n  [\"Saint Lucia\"]: \"LC\",\n  [\"Saint Pierre and Miquelon\"]: \"PM\",\n  [\"Saint Vincent and the Grenadines\"]: \"VC\",\n  [\"Samoa\"]: \"WS\",\n  [\"San Marino\"]: \"SM\",\n  [\"Sao Tome and Principe\"]: \"ST\",\n  [\"Saudi Arabia\"]: \"SA\",\n  [\"Senegal\"]: \"SN\",\n  [\"Serbia and Montenegro\"]: \"CS\",\n  [\"Seychelles\"]: \"SC\",\n  [\"Sierra Leone\"]: \"SL\",\n  [\"Singapore\"]: \"SG\",\n  [\"Slovakia\"]: \"SK\",\n  [\"Slovenia\"]: \"SI\",\n  [\"Solomon Islands\"]: \"SB\",\n  [\"Somalia\"]: \"SO\",\n  [\"South Africa\"]: \"ZA\",\n  [\"South Georgia and the South Sandwich Islands\"]: \"GS\",\n  [\"Spain\"]: \"ES\",\n  [\"Sri Lanka\"]: \"LK\",\n  [\"Sudan\"]: \"SD\",\n  [\"Suriname\"]: \"SR\",\n  [\"Svalbard and Jan Mayen\"]: \"SJ\",\n  [\"Swaziland\"]: \"SZ\",\n  [\"Sweden\"]: \"SE\",\n  [\"Switzerland\"]: \"CH\",\n  [\"Syrian Arab Republic\"]: \"SY\",\n  [\"Taiwan, Province of China\"]: \"TW\",\n  [\"Tajikistan\"]: \"TJ\",\n  [\"Tanzania, United Republic of\"]: \"TZ\",\n  [\"Thailand\"]: \"TH\",\n  [\"Timor-Leste\"]: \"TL\",\n  [\"Togo\"]: \"TG\",\n  [\"Tokelau\"]: \"TK\",\n  [\"Tonga\"]: \"TO\",\n  [\"Trinidad and Tobago\"]: \"TT\",\n  [\"Tunisia\"]: \"TN\",\n  [\"Turkey\"]: \"TR\",\n  [\"Turkmenistan\"]: \"TM\",\n  [\"Turks and Caicos Islands\"]: \"TC\",\n  [\"Tuvalu\"]: \"TV\",\n  [\"Uganda\"]: \"UG\",\n  [\"Ukraine\"]: \"UA\",\n  [\"United Arab Emirates\"]: \"AE\",\n  [\"United Kingdom\"]: \"GB\",\n  [\"United States\"]: \"US\",\n  [\"United States Minor Outlying Islands\"]: \"UM\",\n  [\"Uruguay\"]: \"UY\",\n  [\"Uzbekistan\"]: \"UZ\",\n  [\"Vanuatu\"]: \"VU\",\n  [\"Venezuela\"]: \"VE\",\n  [\"Viet Nam\"]: \"VN\",\n  [\"Virgin Islands, British\"]: \"VG\",\n  [\"Virgin Islands, U.S.\"]: \"VI\",\n  [\"Wallis and Futuna\"]: \"WF\",\n  [\"Western Sahara\"]: \"EH\",\n  [\"Yemen\"]: \"YE\",\n  [\"Zambia\"]: \"ZM\",\n  [\"Zimbabwe\"]: \"ZW\",\n};\n","const url =\n  \"https://spreadsheets.google.com/feeds/cells/1PnsTLMpNN9WsffMnmmTMp-Na7zZlbc1kihDsh7m0mLo/7/public/full?alt=json\";\nexport async function getData() {\n  try {\n    const response = await fetch(url);\n\n    if (!response.ok) {\n      const error = await response.json();\n\n      throw new Error(error.message);\n    }\n    return await response.json();\n  } catch (err) {\n    if (err.name !== \"AbortError\") {\n      throw err;\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport { findDOMNode } from \"react-dom\";\nimport HighMaps from \"highcharts/highmaps\";\nimport { useIntl } from \"gatsby-plugin-intl\";\n\nimport americalMap from \"../script/maps/america-map\";\nimport { countryCode } from \"../script/maps/countriies\";\n\n// Service\nimport { getData } from \"../services/CoughService\";\n\n// const intl = useIntl();\n\nclass MapAmerica extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: {\n        title: {\n          text: \"\",\n        },\n        chart: {\n          spacingTop: 0,\n          marginTop: 0,\n          height: 100 + \"%\",\n        },\n        responsives: {\n          rules: [\n            {\n              condition: {\n                minHeight: 600,\n              },\n              chart: {\n                height: (14 / 16) * 100 + \"%\",\n              },\n              chartOptions: {\n                legend: {\n                  align: \"center\",\n                  verticalAlign: \"bottom\",\n                  layout: \"horizontal\",\n                },\n              },\n            },\n          ],\n        },\n        plotOptions: {\n          map: {\n            states: {\n              hover: {\n                color: \"#00A788\",\n                enabled: false,\n              },\n            },\n          },\n        },\n        colorAxis: {\n          min: 0,\n          minColor: \"#E6E7E8\",\n          maxColor: \"#00A788\",\n        },\n        tooltip: {\n          formatter: function (tooltip) {\n            // Donated coughs\n            return `<b>${this.key}:</b> <br>\n              ${props.intl.formatMessage({\n                id: \"dashboard.donatedCoughs\",\n              })}: <b>${this.point.value}</b> <br>`;\n          },\n        },\n        legend: {\n          align: \"center\",\n          verticalAlign: \"bottom\",\n          layout: \"horizontal\",\n        },\n        credits: {\n          enabled: false,\n        },\n        exporting: {\n          enabled: false,\n        },\n        subtitle: {\n          text: \"\",\n          floating: true,\n          align: \"right\",\n          y: 50,\n          style: {\n            fontSize: \"16px\",\n          },\n        },\n        series: [\n          {\n            mapData: americalMap,\n            data: [],\n            name: \"\",\n            dataLabels: {\n              enabled: false,\n              format: \"{point.name}\",\n            },\n          },\n        ],\n        mapNavigation: {\n          enabled: false,\n          buttonOptions: {\n            verticalAlign: \"bottom\",\n          },\n        },\n      },\n    };\n  }\n\n  dataToCountries = (data) => {\n    return data.feed.entry\n      .reduce((acc, item, i) => {\n        if (i > 1) {\n          if (i % 2 === 0) {\n            return [\n              ...acc,\n              {\n                name:\n                  data.feed.entry[i].gs$cell.numericValue ||\n                  data.feed.entry[i].gs$cell.$t,\n                value: parseInt(data.feed.entry[i + 1].gs$cell.numericValue),\n              },\n            ];\n          }\n          return acc;\n        }\n        return acc;\n      }, [])\n      .map((item) => {\n        if (countryCode[item.name]) {\n          return [countryCode[item.name].toLowerCase(), item.value];\n        } else {\n          return [item.name, item.value];\n        }\n      });\n  };\n  async fetch() {\n    const data = await getData();\n    const countries = this.dataToCountries(data);\n\n    const options = {\n      ...this.state.options,\n      series: [\n        {\n          ...this.state.options.series[0],\n          data: countries,\n        },\n      ],\n    };\n    this.chart = new HighMaps[\"Map\"](findDOMNode(this), options);\n    setTimeout(this.fetch.bind(this), 10000); // Refresh data each 10 seconds\n  }\n\n  componentDidMount() {\n    this.fetch(this);\n  }\n\n  componentWillUnmount() {\n    this.chart && this.chart.destroy();\n  }\n\n  render() {\n    return <div />;\n  }\n}\n\nexport default MapAmerica;\n","import React from \"react\";\n\nimport Layout from \"../components/Layout\";\nimport { useIntl } from \"gatsby-plugin-intl\";\nimport SEO from \"../components/SEO\";\nimport MapAmerica from \"./MapAmerica\";\n\nexport default function Dashboard({ data }) {\n  const intl = useIntl();\n\n  return (\n    <Layout>\n      <SEO title=\"Dashboard | Virufy\" />\n\n      <div className=\"px-4 lg:px-0 lg:w-4/5 lg:mx-auto\">\n        <div className=\"grid mb-14 xl:px-0 justify-items-center grid-col-1 gap-16 overflow-hidden\">\n          <div className=\"mb-14 justify-self-start xl:mb-0 2l:mr-9\">\n            <h1\n              className=\"text-3xl font-bold mb-16 mt-6\"\n              dangerouslySetInnerHTML={{\n                __html: intl.formatMessage({ id: \"dashboard.header\" }),\n              }}\n            />\n            <p\n              className=\"mb-12 xl:pr-14 max-w-screen-lg\"\n              dangerouslySetInnerHTML={{\n                __html: intl.formatMessage({ id: \"dashboard.sub-header\" }),\n              }}\n            />\n            <a\n              className=\"no-underline bg-blue text-white px-4 py-2 mb-2 xs:text-xs\"\n              target=\"_blank\"\n              href={\"/app\"}\n            >\n              {intl.formatMessage({ id: \"dashboard.button\" })}\n            </a>\n          </div>\n        </div>\n      </div>\n      {/* COUNTER */}\n      <div className=\"w-full  md:w-auto lg:mx-72 md:h-full\">\n        <iframe\n          width=\"800\"\n          height=\"600\"\n          scrolling=\"no\"\n          src=\"https://datastudio.google.com/embed/reporting/a8be8870-2823-40d9-9159-a1f5bde05502/page/FSMVC\"\n          allowfullscreen\n        ></iframe>\n      </div>\n    </Layout>\n  );\n}\n"],"sourceRoot":""}